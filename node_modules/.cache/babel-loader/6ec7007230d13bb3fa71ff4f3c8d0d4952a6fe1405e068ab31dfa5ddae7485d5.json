{"ast":null,"code":"var _jsxFileName = \"C:\\\\doctor\\\\admin\\\\src\\\\pages\\\\list\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport './List.css';\nimport Title from '../../components/title/Title';\nimport Doctor from '../../components/doctor/Doctor';\nimport { AdminContext } from '../../context/AdminContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const {\n    doctors,\n    getAllDoctors,\n    aToken\n  } = useContext(AdminContext);\n  useEffect(() => {\n    if (aToken) {\n      getAllDoctors();\n    }\n  }, [aToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: \"all doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctors-list\",\n      children: doctors.map(doctor => {\n        return /*#__PURE__*/_jsxDEV(Doctor, {\n          image: `http://localhost:4000/images/${doctor.image}`,\n          name: doctor.name,\n          speciality: doctor.speciality,\n          available: doctor.available\n        }, doctor._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"tYUQuONAXvd2Fnf0CHgGpwt08io=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useContext","useEffect","Title","Doctor","AdminContext","jsxDEV","_jsxDEV","List","_s","doctors","getAllDoctors","aToken","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","image","name","speciality","available","_id","_c","$RefreshReg$"],"sources":["C:/doctor/admin/src/pages/list/List.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport './List.css';\r\nimport Title from '../../components/title/Title';\r\nimport Doctor from '../../components/doctor/Doctor';\r\nimport { AdminContext } from '../../context/AdminContext';\r\n\r\nconst List = () => {\r\n  const{doctors, getAllDoctors, aToken} = useContext(AdminContext);\r\n  useEffect(()=>{\r\n    if(aToken){\r\n      getAllDoctors();\r\n    }\r\n  },[aToken])\r\n  return (\r\n    <div className='list p-4'>\r\n      <Title title='all doctors'/>\r\n      <div className='doctors-list'>\r\n        {doctors.map((doctor)=>{\r\n          return(\r\n            <Doctor key={doctor._id} image={`http://localhost:4000/images/${doctor.image}`} name={doctor.name} speciality={doctor.speciality} available={doctor.available}/>\r\n          )\r\n        })} \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAK;IAACC,OAAO;IAAEC,aAAa;IAAEC;EAAM,CAAC,GAAGX,UAAU,CAACI,YAAY,CAAC;EAChEH,SAAS,CAAC,MAAI;IACZ,IAAGU,MAAM,EAAC;MACRD,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAC,CAACC,MAAM,CAAC,CAAC;EACX,oBACEL,OAAA;IAAKM,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBP,OAAA,CAACJ,KAAK;MAACY,KAAK,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5BZ,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BJ,OAAO,CAACU,GAAG,CAAEC,MAAM,IAAG;QACrB,oBACEd,OAAA,CAACH,MAAM;UAAkBkB,KAAK,EAAE,gCAAgCD,MAAM,CAACC,KAAK,EAAG;UAACC,IAAI,EAAEF,MAAM,CAACE,IAAK;UAACC,UAAU,EAAEH,MAAM,CAACG,UAAW;UAACC,SAAS,EAAEJ,MAAM,CAACI;QAAU,GAAjJJ,MAAM,CAACK,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwI,CAAC;MAEpK,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAV,EAAA,CAnBKD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAqBV,eAAeA,IAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}