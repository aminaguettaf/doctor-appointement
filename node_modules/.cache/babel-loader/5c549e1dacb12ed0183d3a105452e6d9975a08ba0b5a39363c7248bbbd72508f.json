{"ast":null,"code":"import{createContext,useState,useEffect}from\"react\";import{toast}from'react-toastify';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const Context=/*#__PURE__*/createContext(null);const StoreContextProvider=props=>{const[doctors,setDoctors]=useState([]);const[userData,setUserData]=useState([]);const[token,setToken]=useState(localStorage.getItem('token')?localStorage.getItem('token'):'');const getAlldoctors=async()=>{try{const response=await axios.get('http://localhost:4000/api/doctor/list');if(response.data.success){setDoctors(response.data.data);}else{toast.error(response.data.message);}}catch(error){toast.error(error.message);}};const getUserData=async()=>{try{const response=await axios.get('http://localhost:4000/api/user/get-profile',{headers:{token}});if(response.data.success){setUserData(response.data.data);}else{toast.error(response.data.message);}}catch(error){toast.error(error.message);}};useEffect(()=>{if(token){getUserData();}else{setUserData(false);}},[token]);useEffect(()=>{getAlldoctors();},[]);const contextValue={doctors,getAlldoctors,token,setToken,userData,setUserData,getUserData};return/*#__PURE__*/_jsx(Context.Provider,{value:contextValue,children:props.children});};export default StoreContextProvider;","map":{"version":3,"names":["createContext","useState","useEffect","toast","axios","jsx","_jsx","Context","StoreContextProvider","props","doctors","setDoctors","userData","setUserData","token","setToken","localStorage","getItem","getAlldoctors","response","get","data","success","error","message","getUserData","headers","contextValue","Provider","value","children"],"sources":["C:/doctor/frontend/src/context/Context.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport {toast} from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst StoreContextProvider = (props)=>{\r\n    const[doctors, setDoctors]= useState([]);\r\n    const[userData, setUserData] = useState([]);\r\n    const[token, setToken] = useState(localStorage.getItem('token') ? localStorage.getItem('token') : '');\r\n\r\n    const getAlldoctors = async()=>{\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/doctor/list');\r\n            if(response.data.success){\r\n                setDoctors(response.data.data);\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const getUserData = async()=>{\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/user/get-profile', {headers:{token}});\r\n            if(response.data.success){\r\n                setUserData(response.data.data);\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        if(token){\r\n            getUserData();\r\n        }\r\n        else{\r\n            setUserData(false);\r\n        }\r\n    }, [token])\r\n    useEffect(() => {\r\n        getAlldoctors();\r\n    }, [])\r\n    const contextValue = {\r\n        doctors, getAlldoctors,\r\n        token,setToken,\r\n        userData,setUserData,\r\n        getUserData\r\n    }\r\n    return(\r\n        <Context.Provider value={contextValue}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\nexport default StoreContextProvider;\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC1D,OAAQC,KAAK,KAAO,gBAAgB,CACpC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,MAAO,MAAM,CAAAC,OAAO,cAAGP,aAAa,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAQ,oBAAoB,CAAIC,KAAK,EAAG,CAClC,KAAK,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAEV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAK,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC3C,KAAK,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAACe,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAGD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAG,EAAE,CAAC,CAErG,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAS,CAC3B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,uCAAuC,CAAC,CACzE,GAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CACrBX,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAClC,CAAC,IACG,CACAlB,KAAK,CAACoB,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC,CACtC,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZpB,KAAK,CAACoB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,CAC9B,CACJ,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAS,CACzB,GAAI,CACA,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,4CAA4C,CAAE,CAACM,OAAO,CAAC,CAACZ,KAAK,CAAC,CAAC,CAAC,CACjG,GAAGK,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CACrBT,WAAW,CAACM,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CACnC,CAAC,IACG,CACAlB,KAAK,CAACoB,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC,CACtC,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZpB,KAAK,CAACoB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,CAC9B,CAEJ,CAAC,CACDtB,SAAS,CAAC,IAAM,CACZ,GAAGY,KAAK,CAAC,CACLW,WAAW,CAAC,CAAC,CACjB,CAAC,IACG,CACAZ,WAAW,CAAC,KAAK,CAAC,CACtB,CACJ,CAAC,CAAE,CAACC,KAAK,CAAC,CAAC,CACXZ,SAAS,CAAC,IAAM,CACZgB,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAS,YAAY,CAAG,CACjBjB,OAAO,CAAEQ,aAAa,CACtBJ,KAAK,CAACC,QAAQ,CACdH,QAAQ,CAACC,WAAW,CACpBY,WACJ,CAAC,CACD,mBACInB,IAAA,CAACC,OAAO,CAACqB,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAG,QAAA,CACjCrB,KAAK,CAACqB,QAAQ,CACD,CAAC,CAE3B,CAAC,CACD,cAAe,CAAAtB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}