{"ast":null,"code":"var _jsxFileName = \"C:\\\\doctor\\\\admin\\\\src\\\\context\\\\AdminContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminContext = /*#__PURE__*/createContext();\nconst AdminContextProvider = props => {\n  _s();\n  const [aToken, setAToken] = useState(localStorage.getItem('aToken') ? localStorage.getItem('aToken') : '');\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const [doctors, setDoctors] = useState([]);\n  const getAllDoctors = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/admin/all-doctors', {\n        headers: {\n          aToken\n        }\n      });\n      if (response.data.success) {\n        setDoctors(response.data.doctors);\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const changeAvailability = async docId => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/admin/change-availability', {\n        docId\n      }, {\n        headers: {\n          aToken\n        }\n      });\n      if (response.data.success) {\n        toast.success(response.data.message);\n        getAllDoctors();\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem('aToken', aToken);\n  }, [aToken]);\n  const value = {\n    aToken,\n    setAToken,\n    backendUrl,\n    doctors,\n    getAllDoctors\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminContextProvider, \"TT/50ObVWr3pB5PzNB16OnhPrTY=\");\n_c = AdminContextProvider;\nexport default AdminContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","toast","jsxDEV","_jsxDEV","AdminContext","AdminContextProvider","props","_s","aToken","setAToken","localStorage","getItem","backendUrl","process","env","REACT_APP_BACKEND_URL","doctors","setDoctors","getAllDoctors","response","get","headers","data","success","error","message","changeAvailability","docId","post","setItem","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/doctor/admin/src/context/AdminContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\n\r\n\r\nexport const AdminContext = createContext();\r\n\r\nconst AdminContextProvider = (props)=>{\r\n    const[aToken, setAToken] = useState(localStorage.getItem('aToken')?localStorage.getItem('aToken'):'');\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n    const[doctors, setDoctors] = useState([]);\r\n\r\n    const getAllDoctors = async()=>{\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/admin/all-doctors', {headers: {aToken}});\r\n            if(response.data.success){\r\n                setDoctors(response.data.doctors);\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n       \r\n    }\r\n\r\n    const changeAvailability = async(docId)=>{\r\n        try {\r\n            const response = await axios.post('http://localhost:4000/api/admin/change-availability', {docId}, {headers:{aToken}});\r\n            if(response.data.success){\r\n                toast.success(response.data.message);\r\n                getAllDoctors();\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        localStorage.setItem('aToken', aToken);\r\n    },[aToken])\r\n\r\n    const value={\r\n        aToken, setAToken, \r\n        backendUrl,\r\n        doctors,\r\n        getAllDoctors\r\n    }\r\n\r\n    return(\r\n        <AdminContext.Provider value={value}>\r\n            {props.children}\r\n        </AdminContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AdminContextProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAE3C,MAAMQ,oBAAoB,GAAIC,KAAK,IAAG;EAAAC,EAAA;EAClC,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,GAACD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,GAAC,EAAE,CAAC;EACrG,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACpD,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAS;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,6CAA6C,EAAE;QAACC,OAAO,EAAE;UAACb;QAAM;MAAC,CAAC,CAAC;MACpG,IAAGW,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAC;QACrBN,UAAU,CAACE,QAAQ,CAACG,IAAI,CAACN,OAAO,CAAC;MACrC,CAAC,MACG;QACAf,KAAK,CAACuB,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACG,OAAO,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZvB,KAAK,CAACuB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B;EAEJ,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAMC,KAAK,IAAG;IACrC,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMnB,KAAK,CAAC4B,IAAI,CAAC,qDAAqD,EAAE;QAACD;MAAK,CAAC,EAAE;QAACN,OAAO,EAAC;UAACb;QAAM;MAAC,CAAC,CAAC;MACrH,IAAGW,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAC;QACrBtB,KAAK,CAACsB,OAAO,CAACJ,QAAQ,CAACG,IAAI,CAACG,OAAO,CAAC;QACpCP,aAAa,CAAC,CAAC;MACnB,CAAC,MACG;QACAjB,KAAK,CAACuB,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACG,OAAO,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZvB,KAAK,CAACuB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EACD3B,SAAS,CAAC,MAAI;IACVY,YAAY,CAACmB,OAAO,CAAC,QAAQ,EAAErB,MAAM,CAAC;EAC1C,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,MAAMsB,KAAK,GAAC;IACRtB,MAAM;IAAEC,SAAS;IACjBG,UAAU;IACVI,OAAO;IACPE;EACJ,CAAC;EAED,oBACIf,OAAA,CAACC,YAAY,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAC/B1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhC,CAAC;AAAA7B,EAAA,CAlDKF,oBAAoB;AAAAgC,EAAA,GAApBhC,oBAAoB;AAoD1B,eAAeA,oBAAoB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}