{"ast":null,"code":"var _jsxFileName = \"C:\\\\doctor\\\\frontend\\\\src\\\\context\\\\Context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [user, setUser] = useState([]);\n  const [token, setToken] = useState(localStorage.getItem('token') ? localStorage.getItem('token') : '');\n  const getAlldoctors = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/doctor/list');\n      if (response.data.success) {\n        setDoctors(response.data.data);\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const getUserData = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/user/get-profile', {\n        headers: {\n          token\n        }\n      });\n      if (response.data.success) {\n        setUser(response.data.success);\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      getUserData();\n    } else {\n      setUser(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    getAlldoctors();\n  }, []);\n  const contextValue = {\n    doctors,\n    token,\n    setToken\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreContextProvider, \"jlLqVeQRCddiw32nDqYt/oBI7TA=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","toast","axios","jsxDEV","_jsxDEV","Context","StoreContextProvider","props","_s","doctors","setDoctors","user","setUser","token","setToken","localStorage","getItem","getAlldoctors","response","get","data","success","error","message","getUserData","headers","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/doctor/frontend/src/context/Context.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport {toast} from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst StoreContextProvider = (props)=>{\r\n    const[doctors, setDoctors]= useState([]);\r\n    const[user, setUser] = useState([]);\r\n    const[token, setToken] = useState(localStorage.getItem('token') ? localStorage.getItem('token') : '');\r\n\r\n    const getAlldoctors = async()=>{\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/doctor/list');\r\n            if(response.data.success){\r\n                setDoctors(response.data.data);\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const getUserData = async()=>{\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/user/get-profile', {headers:{token}});\r\n            if(response.data.success){\r\n                setUser(response.data.success);\r\n            }\r\n            else{\r\n                toast.error(response.data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message);\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        if(token){\r\n            getUserData();\r\n        }\r\n        else{\r\n            setUser(false);\r\n        }\r\n    }, [token])\r\n    useEffect(() => {\r\n        getAlldoctors();\r\n    }, [])\r\n    const contextValue = {\r\n        doctors,\r\n        token,\r\n        setToken\r\n    }\r\n    return(\r\n        <Context.Provider value={contextValue}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\nexport default StoreContextProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAAQC,KAAK,QAAO,gBAAgB;AACpC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,OAAO,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE1C,MAAMQ,oBAAoB,GAAIC,KAAK,IAAG;EAAAC,EAAA;EAClC,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAK,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;EAErG,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAS;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,uCAAuC,CAAC;MACzE,IAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAC;QACrBX,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAClC,CAAC,MACG;QACAnB,KAAK,CAACqB,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZrB,KAAK,CAACqB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAS;IACzB,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,4CAA4C,EAAE;QAACM,OAAO,EAAC;UAACZ;QAAK;MAAC,CAAC,CAAC;MACjG,IAAGK,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAC;QACrBT,OAAO,CAACM,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAClC,CAAC,MACG;QACApB,KAAK,CAACqB,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZrB,KAAK,CAACqB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B;EAEJ,CAAC;EACDvB,SAAS,CAAC,MAAM;IACZ,IAAGa,KAAK,EAAC;MACLW,WAAW,CAAC,CAAC;IACjB,CAAC,MACG;MACAZ,OAAO,CAAC,KAAK,CAAC;IAClB;EACJ,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EACXb,SAAS,CAAC,MAAM;IACZiB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMS,YAAY,GAAG;IACjBjB,OAAO;IACPI,KAAK;IACLC;EACJ,CAAC;EACD,oBACIV,OAAA,CAACC,OAAO,CAACsB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACjCtB,KAAK,CAACsB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAAzB,EAAA,CAtDKF,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AAuD1B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}