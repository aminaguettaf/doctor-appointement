{"ast":null,"code":"var _jsxFileName = \"C:\\\\doctor\\\\admin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Dashboard from './pages/dashboard/Dashboard';\nimport Appointment from './pages/apponitments/Appointment';\nimport List from './pages/list/List';\nimport Add from './pages/add/Add';\nimport Navbar from './components/navbar/Navbar';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Login from './pages/login/Login';\nimport { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from './context/AdminContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') ? localStorage.getItem('token') : '');\n  const {\n    aToken,\n    setAToken\n  } = useContext(AdminContext);\n  useEffect(() => {\n    localStorage.setItem('token', token);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token === '' ? /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all-appointments\",\n            element: /*#__PURE__*/_jsxDEV(Appointment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/doctor-list\",\n            element: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add-doctor\",\n            element: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O5WOYpS0fS9UqoJ+IBCqu/xN8mI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Dashboard","Appointment","List","Add","Navbar","Sidebar","Login","useContext","useEffect","useState","AdminContext","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","aToken","setAToken","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","$RefreshReg$"],"sources":["C:/doctor/admin/src/App.js"],"sourcesContent":["import './App.css';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport Dashboard from './pages/dashboard/Dashboard';\nimport Appointment from './pages/apponitments/Appointment';\nimport List from './pages/list/List';\nimport Add from './pages/add/Add';\nimport Navbar from './components/navbar/Navbar';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Login from './pages/login/Login';\nimport { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from './context/AdminContext';\n\nfunction App() {\n  const[token, setToken] = useState(localStorage.getItem('token')? localStorage.getItem('token'):'');\n  const{aToken, setAToken} = useContext(AdminContext);\n  useEffect(()=>{\n    localStorage.setItem('token', token);\n  },[token])\n  return (\n    <div>\n      {token === '' ?\n      <Login setToken={setToken} />:\n      <BrowserRouter>\n      <Navbar />\n      <div className='d-flex'>\n        <Sidebar />\n        <Routes>\n          <Route path='/admin-dashboard' element={<Dashboard/>}/>\n          <Route path='/all-appointments' element={<Appointment/>}/>\n          <Route path='/doctor-list' element={<List/>}/>\n          <Route path='/add-doctor' element={<Add/>}/>\n      </Routes>\n      </div>\n    </BrowserRouter>\n    }\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}