{"ast":null,"code":"var _jsxFileName = \"C:\\\\doctor\\\\admin\\\\src\\\\context\\\\AdminContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminContext = /*#__PURE__*/createContext();\nconst AdminContextProvider = props => {\n  _s();\n  const [aToken, setAToken] = useState(localStorage.getItem('aToken') ? localStorage.getItem('aToken') : '');\n  const backendUrl = process.env.REACT_APP_BACKEND_URL;\n  const [doctors, setDoctors] = useState([]);\n  const getAllDoctors = async () => {\n    const data = await axios.get('http://localhost:4000/api/admin/all-doctors', {}, {\n      headers: {\n        aToken\n      }\n    });\n    setDoctors(data);\n  };\n  useEffect(() => {\n    localStorage.setItem('aToken', aToken);\n  }, [aToken]);\n  const value = {\n    aToken,\n    setAToken,\n    backendUrl,\n    doctors\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminContextProvider, \"TT/50ObVWr3pB5PzNB16OnhPrTY=\");\n_c = AdminContextProvider;\nexport default AdminContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminContext","AdminContextProvider","props","_s","aToken","setAToken","localStorage","getItem","backendUrl","process","env","REACT_APP_BACKEND_URL","doctors","setDoctors","getAllDoctors","data","get","headers","setItem","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/doctor/admin/src/context/AdminContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport const AdminContext = createContext();\r\n\r\nconst AdminContextProvider = (props)=>{\r\n    const[aToken, setAToken] = useState(localStorage.getItem('aToken')?localStorage.getItem('aToken'):'');\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL;\r\n    const[doctors, setDoctors] = useState([]);\r\n\r\n    const getAllDoctors = async()=>{\r\n        const data = await axios.get('http://localhost:4000/api/admin/all-doctors', {}, {headers:{aToken}});\r\n        setDoctors(data);\r\n    }\r\n    useEffect(()=>{\r\n        localStorage.setItem('aToken', aToken);\r\n    },[aToken])\r\n\r\n    const value={\r\n        aToken, setAToken, \r\n        backendUrl,\r\n        doctors\r\n    }\r\n\r\n    return(\r\n        <AdminContext.Provider value={value}>\r\n            {props.children}\r\n        </AdminContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AdminContextProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAE3C,MAAMO,oBAAoB,GAAIC,KAAK,IAAG;EAAAC,EAAA;EAClC,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,GAACD,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,GAAC,EAAE,CAAC;EACrG,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EACpD,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAS;IAC3B,MAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,6CAA6C,EAAE,CAAC,CAAC,EAAE;MAACC,OAAO,EAAC;QAACb;MAAM;IAAC,CAAC,CAAC;IACnGS,UAAU,CAACE,IAAI,CAAC;EACpB,CAAC;EACDpB,SAAS,CAAC,MAAI;IACVW,YAAY,CAACY,OAAO,CAAC,QAAQ,EAAEd,MAAM,CAAC;EAC1C,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEX,MAAMe,KAAK,GAAC;IACRf,MAAM;IAAEC,SAAS;IACjBG,UAAU;IACVI;EACJ,CAAC;EAED,oBACIb,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAC/BnB,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhC,CAAC;AAAAtB,EAAA,CAxBKF,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AA0B1B,eAAeA,oBAAoB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}